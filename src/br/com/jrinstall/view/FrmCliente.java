/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.jrinstall.view;

import br.com.jrinstall.bean.TableTelefone;
import br.com.jrinstall.bean.TableCliente;
import br.com.jrinstall.bean.CellEditorDataFormat;
import br.com.jrinstall.entity.Bairro;
import br.com.jrinstall.entity.Cidade;
import br.com.jrinstall.entity.Cliente;
import br.com.jrinstall.entity.ClienteTelefone;
import br.com.jrinstall.entity.TelefoneOperadora;
import br.com.jrinstall.entity.Usuario;
import br.com.jrinstall.helper.MetodosUteis;
import br.com.jrinstall.helper.Validacao;
import br.com.jrinstall.service.BairroService;
import br.com.jrinstall.service.CidadeService;
import br.com.jrinstall.service.ClienteService;
import br.com.jrinstall.service.UsuarioService;
import java.awt.Font;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JDesktopPane;
import javax.swing.JFormattedTextField;
import javax.swing.text.MaskFormatter;
import org.hibernate.HibernateException;

/**
 *
 * @author fernando
 */
public class FrmCliente extends javax.swing.JInternalFrame {

    public JDesktopPane desktopPaneCliente;
    private ClienteService clienteService;
    private Cliente cliente;
    private List listaCliente;
    private CidadeService cidadeService;
    private BairroService bairroService;
    private Map mapCidade;
    private Map mapBairro;
    private Map mapPesquisa;
    private TableCliente tableCliente;
    private TableTelefone tabelaTelefone;
    private List<TelefoneOperadora> operadoras;
    private Usuario usuarioLogado;

    /**
     * Creates new form FrmCliente
     */
    public FrmCliente() {
        initComponents();
    }

    public FrmCliente(JDesktopPane desktop) {
        initComponents();
        MetodosUteis.DefineFontTextField(this, "arial", Font.BOLD, 14);
        this.desktopPaneCliente = desktop;
        MetodosUteis.DesabilitarTextField(this);
        this.jTextPesquisa.setEditable(true);
        clienteService = new ClienteService();
        cliente = new Cliente();
        PreencheCombos();
        operadoras = new ArrayList<>();
        operadoras = clienteService.getListaOperadoras();
        jTextNome.requestFocus();
        tipoMascara(jTextCPF_CNPJ, true);

        UsuarioService usuarioService = new UsuarioService();
        usuarioLogado = new Usuario();
        usuarioLogado.setUsuario("Admin");
        usuarioLogado.setSenha("admin");
        usuarioService.validaLogin(usuarioLogado);
//        jLUsuarioCadastro.setVisible(Principal.getUsuario().getAdministrador());
        //preencheAluno(aluno);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelCliente = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextNome = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextRua = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextNr = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jComboBairro = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jComboCidade = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jTextEmail = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        textArea1 = new java.awt.TextArea();
        jRadioPF = new javax.swing.JRadioButton();
        jRadioCNPJ = new javax.swing.JRadioButton();
        jTextCPF_CNPJ = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextCEP = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextComplemento = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableFones = new javax.swing.JTable();
        jPanelPesquisa = new javax.swing.JPanel();
        jComboTipoPesquisa = new javax.swing.JComboBox();
        jTextPesquisa = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jButtonNovo = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();

        setClosable(true);
        setResizable(true);
        setTitle("Cadastro de Cliente");
        setToolTipText("");

        jPanelCliente.setPreferredSize(new java.awt.Dimension(585, 350));
        jPanelCliente.setRequestFocusEnabled(false);
        jPanelCliente.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setText("Cliente");
        jPanelCliente.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 16, 120, -1));

        jTextNome.setNextFocusableComponent(jTextCPF_CNPJ);
        jPanelCliente.add(jTextNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 36, 321, 20));

        jLabel6.setText("Rua");
        jPanelCliente.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 67, 40, -1));

        jTextRua.setNextFocusableComponent(jTextNr);
        jPanelCliente.add(jTextRua, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 87, 280, -1));

        jLabel10.setText("Nr");
        jPanelCliente.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 67, 20, -1));

        jTextNr.setNextFocusableComponent(jTextComplemento);
        jPanelCliente.add(jTextNr, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 87, 40, -1));

        jLabel8.setText("Bairro");
        jPanelCliente.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 118, 70, -1));

        jComboBairro.setNextFocusableComponent(jTextCEP);
        jPanelCliente.add(jComboBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 138, 130, -1));

        jLabel11.setText("Cidade");
        jPanelCliente.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 118, 90, -1));

        jComboCidade.setNextFocusableComponent(jComboBairro);
        jPanelCliente.add(jComboCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 138, 190, -1));

        jLabel12.setText("E-mail");
        jPanelCliente.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 164, 100, -1));

        jTextEmail.setNextFocusableComponent(jButtonSalvar);
        jPanelCliente.add(jTextEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 184, 281, -1));

        jLabel13.setText("Observações");
        jPanelCliente.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 100, -1));
        jPanelCliente.add(textArea1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 234, 330, 80));

        buttonGroup1.add(jRadioPF);
        jRadioPF.setSelected(true);
        jRadioPF.setText("CPF");
        jRadioPF.setActionCommand("PF");
        jRadioPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioPFActionPerformed(evt);
            }
        });
        jPanelCliente.add(jRadioPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 11, -1, -1));
        jRadioPF.getAccessibleContext().setAccessibleName("PF");

        buttonGroup1.add(jRadioCNPJ);
        jRadioCNPJ.setText("CNPJ");
        jRadioCNPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioCNPJActionPerformed(evt);
            }
        });
        jPanelCliente.add(jRadioCNPJ, new org.netbeans.lib.awtextra.AbsoluteConstraints(422, 11, -1, -1));

        jTextCPF_CNPJ.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##########"))));
        jTextCPF_CNPJ.setToolTipText("");
        jTextCPF_CNPJ.setNextFocusableComponent(jTextRua);
        jPanelCliente.add(jTextCPF_CNPJ, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 36, 150, 20));

        jLabel9.setText("CEP");
        jPanelCliente.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 118, 80, -1));

        try {
            jTextCEP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTextCEP.setNextFocusableComponent(jTextEmail);
        jPanelCliente.add(jTextCEP, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 138, 130, -1));

        jLabel7.setText("Complemento");
        jPanelCliente.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 67, 100, -1));

        jTextComplemento.setNextFocusableComponent(jComboCidade);
        jPanelCliente.add(jTextComplemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 87, 150, -1));

        jLabel14.setText("Telefones");
        jPanelCliente.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 164, 80, -1));

        jTableFones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableFones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableFonesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTableFonesMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(jTableFones);

        jPanelCliente.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 184, 227, 130));

        jTabbedPane1.addTab("Cliente", jPanelCliente);

        jComboTipoPesquisa.addItem("Nome");
        jComboTipoPesquisa.addItem("CPF_CNPJ");
        jComboTipoPesquisa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboTipoPesquisaItemStateChanged(evt);
            }
        });
        jComboTipoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboTipoPesquisaActionPerformed(evt);
            }
        });

        jButtonPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/jrinstall/icon/pesquisar-24.png"))); // NOI18N
        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTableMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(jTable);

        javax.swing.GroupLayout jPanelPesquisaLayout = new javax.swing.GroupLayout(jPanelPesquisa);
        jPanelPesquisa.setLayout(jPanelPesquisaLayout);
        jPanelPesquisaLayout.setHorizontalGroup(
            jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPesquisaLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelPesquisaLayout.createSequentialGroup()
                        .addComponent(jComboTipoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelPesquisaLayout.setVerticalGroup(
            jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPesquisaLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboTipoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Pesquisa", jPanelPesquisa);

        jButtonNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/jrinstall/icon/novo-24.png"))); // NOI18N
        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jButtonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/jrinstall/icon/salvar-24.png"))); // NOI18N
        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/jrinstall/icon/excluir-24.png"))); // NOI18N
        jButtonExcluir.setText("Excluir");
        jButtonExcluir.setEnabled(false);
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jButtonNovo)
                        .addGap(40, 40, 40)
                        .addComponent(jButtonSalvar)
                        .addGap(33, 33, 33)
                        .addComponent(jButtonExcluir)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNovo)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonExcluir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        MetodosUteis.HabilitarTextField(this);
        MetodosUteis.LimparTextField(this);
        cliente = new Cliente();
        cliente.setUsuarioCadastro(usuarioLogado.getUsuario());
        cliente.setDataCadastro(new Date());

        clickNovo();
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        if (validaCampos()) {

            try {
                preencheClienteDadosDigitados();
                if (cliente.getTelefones().size() - 1 >= 0) {
                    if (cliente.getTelefones().get(cliente.getTelefones().size()-1).getNumero() == "Novo") {
                        cliente.getTelefones().remove(cliente.getTelefones().size() - 1);
                    }
                }
                clienteService.Save(cliente);
                clickSalvar();
                MetodosUteis.showMsg("Registro salvo com sucesso!");
            } catch (HibernateException ex) {
                MetodosUteis.showMsg("Erro: " + ex.getMessage());
            }

        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed

        if (null == cliente.getIdCliente()) {
            MetodosUteis.showMsg("Seleciona um Cliente válido pra excluir.");
        } else {
            if (MetodosUteis.showQuestionMessage("Deseja excluir o Item selecionado?", "Atenção") == 0) {
                try{
                if (clienteService.delete(cliente)) {
                    MetodosUteis.showMsg("Cliente excluído com sucesso!");
                    MetodosUteis.LimparTextField(this);
                }
                }catch (HibernateException e){
                    MetodosUteis.showMsg("Erro ao excluir cliente. " + e.getMessage());
                }
            }

        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jComboTipoPesquisaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboTipoPesquisaItemStateChanged
        // TODO add your handling code here:
        jTextPesquisa.setText(null);
    }//GEN-LAST:event_jComboTipoPesquisaItemStateChanged

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed

        if (jTextPesquisa.getText().length() == 0) {
            MetodosUteis.showMsg("Informe o Item a pesquisar!");

        } else {
            listaCliente = new ArrayList<Cliente>();
            String criterio = String.valueOf(jComboTipoPesquisa.getSelectedItem().toString());
            mapPesquisa = new HashMap();

            if (criterio.equals("Nome")) {
                mapPesquisa.put("Nome", "SELECT distinct(c) FROM Cliente c left join fetch c.telefones WHERE c.nome like '" + jTextPesquisa.getText() + "%'");
            } else if (criterio.equals("CPF_CNPJ")) {
                mapPesquisa.put("CPF_CNPJ", "SELECT distinct(c) FROM Cliente c left join fetch c.telefones WHERE c.cpfCnpj = " + Integer.parseInt(jTextPesquisa.getText()));
            }

            //listaCliente = new ArrayList<Cliente>();
            listaCliente = clienteService.getListByHQL((String) mapPesquisa.get(criterio));
            montaTabelaCliente(listaCliente);

        }
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void montaTabelaCliente(List<Cliente> lista) {
        String colunas[] = new String[]{"Nome", "Endereco", "Cidade", "Bairro"};
        ArrayList linhas = new ArrayList<Cliente>();
        for (Cliente p : lista) {
            linhas.add(new String[]{p.getNome(), p.getEndereco(), p.getCidade().getDescricaoCidade(), p.getBairro().getDescricaoBairro()});
        }
        tableCliente = new TableCliente(linhas, colunas, lista);
        jTable.setModel(tableCliente);
        jTable.getColumnModel().getColumn(0).setHeaderValue("Cliente");
        jTable.getColumnModel().getColumn(0).setPreferredWidth(200);
        jTable.getColumnModel().getColumn(1).setHeaderValue("Endereco");
        jTable.getColumnModel().getColumn(1).setPreferredWidth(150);
        jTable.getColumnModel().getColumn(2).setHeaderValue("Cidade");
        jTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTable.getColumnModel().getColumn(3).setHeaderValue("Bairro");
        jTable.getColumnModel().getColumn(3).setPreferredWidth(50);

    }

    public void montaTabelaFones(List<ClienteTelefone> lista) {
        try {
            if (lista == null) {
                lista = new ArrayList<ClienteTelefone>();
                lista.add(new ClienteTelefone("Novo", new TelefoneOperadora(0, "Novo")));
            } else {
                lista.add(new ClienteTelefone("Novo", new TelefoneOperadora(0, "Novo")));
            }
            String colunas[] = new String[]{"Telefone", "Tipo", "X"};
            ArrayList linhas = new ArrayList<ClienteTelefone>();

            for (ClienteTelefone p : lista) {
                linhas.add(new String[]{p.getNumero(), p.getOperadora().getDescricaoOperadora(), "X"});
            }
            setTabelaTelefone(new TableTelefone(linhas, colunas, lista));
            tabelaTelefone.setOperadoras(operadoras);
            tabelaTelefone.setCliente(cliente);
            tabelaTelefone.setFrmCliente(this);
            jTableFones.setModel(getTabelaTelefone());
            jTableFones.getColumnModel().getColumn(0).setHeaderValue("Telefone");
            jTableFones.getColumnModel().getColumn(0).setCellEditor(new CellEditorDataFormat(new MaskFormatter("(##)####-####")));
            jTableFones.getColumnModel().getColumn(0).setPreferredWidth(120);
            jTableFones.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(montaComboOperadoras()));
            jTableFones.getColumnModel().getColumn(1).setHeaderValue("Tipo");
            jTableFones.getColumnModel().getColumn(1).setPreferredWidth(60);
            jTableFones.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(montaComboOperadoras()));
            jTableFones.getColumnModel().getColumn(2).setHeaderValue("X");
            jTableFones.getColumnModel().getColumn(2).setPreferredWidth(10);
        } catch (Exception ex) {
            MetodosUteis.showMsg("Erro ao criar tabela de telefones: " + ex.getMessage());
        }
    }

    private JComboBox montaComboOperadoras() {
        javax.swing.JComboBox combo = new JComboBox();
        for (TelefoneOperadora op : operadoras) {
            combo.addItem(op.getDescricaoOperadora());
        }
        return combo;
    }

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        cliente = new Cliente();
        cliente = (Cliente) tableCliente.getcliente(jTable.getSelectedRow());
        jTabbedPane1.setSelectedComponent(jPanelPesquisa);
        preencheCamposComCliente(cliente);
        clickPesquisar();
        montaTabelaCliente(new ArrayList<Cliente>());
        MetodosUteis.HabilitarTextField(this);
        jTabbedPane1.setSelectedComponent(jPanelCliente);

    }//GEN-LAST:event_jTableMouseClicked

    private void clickPesquisar() {
        jButtonSalvar.setEnabled(true);
        jButtonNovo.setEnabled(true);
        jButtonExcluir.setEnabled(true);

    }


    private void jTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableMouseEntered

    private void jTableFonesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableFonesMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableFonesMouseEntered

    private void jTableFonesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableFonesMouseClicked
//        if(tabelaTelefone.getClienteTelefone(jTableFones.getSelectedRow()).getNumero().equals("Novo")){
//               MetodosUteis.showMsg("Novo número");
//      }                 
        if (jTableFones.getSelectedColumn() == 2) {
            if (!jTableFones.getValueAt(jTableFones.getSelectedRow(), 0).equals("Novo")) {
                if (MetodosUteis.showQuestionMessage("Deseja Excluir o Item selecionado?", "Atenção") == 0) {
                    clienteService.delete(cliente.getTelefones().get(jTableFones.getSelectedRow()));
                    cliente.getTelefones().remove(jTableFones.getSelectedRow());
                    cliente.getTelefones().remove(cliente.getTelefones().size()-1);
                    montaTabelaFones(cliente.getTelefones());
                }
            }
        }
    }//GEN-LAST:event_jTableFonesMouseClicked

    private void jRadioCNPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioCNPJActionPerformed
        tipoMascara(jTextCPF_CNPJ, false);

    }//GEN-LAST:event_jRadioCNPJActionPerformed

    private void tipoMascara(JFormattedTextField jf, boolean isPessoaFisica) {
        try {
            if (isPessoaFisica) {
                jTextCPF_CNPJ.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
            } else {
                jTextCPF_CNPJ.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/###-##")));
            }
            if (cliente.getCpfCnpj() != null) {
                jTextCPF_CNPJ.setText(cliente.getCpfCnpj().toString());
            }
        } catch (ParseException ex) {
            Logger.getLogger(FrmCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void jRadioPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioPFActionPerformed
        tipoMascara(jTextCPF_CNPJ, true);
    }//GEN-LAST:event_jRadioPFActionPerformed

    private void jComboTipoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboTipoPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboTipoPesquisaActionPerformed

    private void preencheCidade() {
        cidadeService = new CidadeService();
        List<Cidade> listaCidade = new ArrayList<Cidade>();
        listaCidade = (List) cidadeService.getListByHQL("SELECT c FROM Cidade c");
        jComboCidade.removeAllItems();
        mapCidade = new HashMap();
        for (Cidade b : listaCidade) {
            mapCidade.put(b.getDescricaoCidade(), b.getIdCidade());
            jComboCidade.addItem(b);
        }
    }

    private void preencheBairro() {
        bairroService = new BairroService();
        List<Bairro> listaBairro = new ArrayList<Bairro>();
        listaBairro = (List) bairroService.getListByHQL("SELECT b FROM Bairro b");
        jComboBairro.removeAllItems();
        mapBairro = new HashMap();
        for (Bairro b : listaBairro) {
            mapBairro.put(b.getDescricaoBairro(), b.getIdBairro());
            jComboBairro.addItem(b.getDescricaoBairro());
        }
    }

    private void clickNovo() {
        jButtonSalvar.setEnabled(true);
        jButtonNovo.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jRadioPF.setSelected(true);
        tipoMascara(jTextCPF_CNPJ, true);

    }

    private void clickSalvar() {
        jButtonSalvar.setEnabled(true);
        jButtonNovo.setEnabled(true);
        jButtonExcluir.setEnabled(true);
        montaTabelaFones(cliente.getTelefones());
    }

    private void clickExcluir() {
        jButtonSalvar.setEnabled(false);
        jButtonNovo.setEnabled(true);
        jButtonExcluir.setEnabled(false);
        jButtonNovo.setEnabled(true);
        jButtonExcluir.setEnabled(false);

    }

    private boolean validaCampos() {
        boolean retorno = true;

        StringBuffer str = new StringBuffer();
        str.append("Campos obrigatórios:");

        if (Validacao.campoBranco(jTextNome.getText())) {
            retorno = false;
            str.append("\n - Nome do Aluno");
            jTextNome.requestFocus();
        }

        String[] patern = jTextCPF_CNPJ.getText().split("[0-9]");
        if (jTextCPF_CNPJ.getText() != null) {
            Long v = MetodosUteis.retornaSomenteNumero(jTextCPF_CNPJ.getText());
            if (v == 0) {
                retorno = false;
                str.append("\n - CPF / CNPJ.");
            }
        }
        if (!retorno) {
            MetodosUteis.showMsg(str.toString());
        }
        return retorno;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox jComboBairro;
    private javax.swing.JComboBox jComboCidade;
    private javax.swing.JComboBox jComboTipoPesquisa;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanelCliente;
    private javax.swing.JPanel jPanelPesquisa;
    private javax.swing.JRadioButton jRadioCNPJ;
    private javax.swing.JRadioButton jRadioPF;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JTable jTableFones;
    private javax.swing.JFormattedTextField jTextCEP;
    private javax.swing.JFormattedTextField jTextCPF_CNPJ;
    private javax.swing.JTextField jTextComplemento;
    private javax.swing.JTextField jTextEmail;
    private javax.swing.JTextField jTextNome;
    private javax.swing.JTextField jTextNr;
    private javax.swing.JTextField jTextPesquisa;
    private javax.swing.JTextField jTextRua;
    private java.awt.TextArea textArea1;
    // End of variables declaration//GEN-END:variables

    private void preencheClienteDadosDigitados() {

        cliente.setNome(jTextNome.getText());
        String cpf_cnpj = null;
        try {
            cpf_cnpj = jTextCPF_CNPJ.getText();
            cpf_cnpj = cpf_cnpj.replace(".", "");
            cpf_cnpj = cpf_cnpj.replace("/", "");
            cpf_cnpj = cpf_cnpj.replace("-", "");
            cliente.setCpfCnpj(Long.valueOf(cpf_cnpj));
        } catch (Exception e) {
            MetodosUteis.showMsg("Erro:" + e.getMessage());
        }
        cliente.setEndereco(jTextRua.getText());
        cliente.setCep(jTextCEP.getText());
        cliente.setComplemento(jTextComplemento.getText());
        cliente.setNr(jTextNr.getText());
        cliente.setEmail(jTextEmail.getText());
        cliente.setObs(textArea1.getText());

        if (null != jComboBairro.getSelectedItem()) {
            cliente.setBairro(new Bairro((Integer) mapBairro.get((String) jComboBairro.getSelectedItem().toString())));
        }
        if (null != jComboCidade.getSelectedItem()) {
            cliente.setCidade(new Cidade((Integer) mapCidade.get((String) jComboCidade.getSelectedItem().toString())));
        }

        if (jRadioPF.isSelected()) {
            cliente.setPessoaFisica(true);
        } else {
            cliente.setPessoaFisica(false);
        }

    }

    private void preencheCamposComCliente(Cliente cliente) {
        jTextNome.setText(cliente.getNome());
        if (cliente.getCpfCnpj() != null) {
            tipoMascara(jTextCPF_CNPJ, cliente.getPessoaFisica());
            jTextCPF_CNPJ.setText(cliente.getCpfCnpj().toString());
        }
        jTextRua.setText(cliente.getEndereco());
        jTextNr.setText(cliente.getNr());
        jTextComplemento.setText(cliente.getComplemento());
        jTextCEP.setText(cliente.getCep());
        jTextEmail.setText(cliente.getEmail());
        textArea1.setText(cliente.getObs());
        jComboBairro.setSelectedItem(cliente.getBairro());
        jComboCidade.setSelectedItem(cliente.getCidade());
        montaTabelaFones(cliente.getTelefones());
    }

    public TableCliente getTableCliente() {
        return tableCliente;
    }

    public void setTableCliente(TableCliente tableCliente) {
        this.tableCliente = tableCliente;
    }

    public TableTelefone getTabelaTelefone() {
        return tabelaTelefone;
    }

    public void setTabelaTelefone(TableTelefone tabelaTelefone) {
        this.tabelaTelefone = tabelaTelefone;
    }

    private void PreencheCombos() {
        preencheBairro();
        preencheCidade();
    }
}
